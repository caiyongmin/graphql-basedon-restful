directive @rest(
  endpoint: String
  path: String
  method: String
  parentAccessorMap: String
  responseAccessor: String
) on FIELD_DEFINITION

enum ProductSize {
  M
  L
  XL
  XXL
}

# 货品服务模块
type Product {
  # 货品 ID
  id: Int
  # 货品名称
  title: String
  # 货品描述
  description: String
  # 货品价格
  price: Float
  # 货品尺寸
  size: ProductSize
}

extend type User {
  collections(userId: Int): [Product] @rest(
    endpoint: "endpoint2001"
    path: "/users/:userId/products"
    parentAccessorMap: "{ id: userId }"
  )
}

extend type Order {
  product(orderId: Int): Product @rest(
    endpoint: "endpoint2001"
    path: "/orders/:orderId/products"
    parentAccessorMap: "{ id: orderId }"
    responseAccessor: "[0]"
  )
}

input ProductInput {
  title: String!
  description: String
  price: Float!
  size: ProductSize!
  userId: Int
  orderId: Int
}

extend type Query {
  product(productId: Int!): Product @rest(
    endpoint: "endpoint2001"
    path: "/products/:productId"
  )
  products: [Product] @rest(
    endpoint: "endpoint2001"
    path: "/products"
  )
}

extend type Mutation {
  createProduct(body: ProductInput): Product @rest(
    endpoint: "endpoint2001"
    path: "/products"
    method: "post"
  )
  updateProduct( productId: Int! body: ProductInput ): Product @rest(
    endpoint: "endpoint2001"
    path: "/products/:productId"
    method: "patch"
  )
}
